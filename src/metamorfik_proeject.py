from __future__ import division # to float division

import distorm3
from capstone import *
import os, sys
from operator import itemgetter # to sort dictionary
import collections # to comparasion
import binascii # to convert binary to hex

			
def mergeDisassembleResult(directory,resultFileName):
	""" Finding most used opcodes
	"""
	
	outfile = open(resultFileName+".opcodeSequences", 'w')

	for root, dirs, files in os.walk(directory):
		for file in files:

			if file.endswith(".distorm"):
				
				filename = root+"\\"+file
				# Read the code from the file
				try:
					print file
					opcodeSequence = open(filename, 'rb').read()
					outfile.write(opcodeSequence)
				except Exception as err:
					print str(err)

def findCommonUsedOpcodes(directory,resultFileName):
	"""Finding and merging all opcode sequence in a file
	"""
	
	opcodeDict 			= 	dict()
	opcodeCountDict 	= 	dict()
	opcodePercentDict	=	dict()
	
	
	for root, dirs, files in os.walk(directory):
		for file in files:

			if file.endswith(".distorm2"):
				
				filename = root+"\\"+file
				# Read the code from the file
				try:
					print file
					# Open this file.
					f = open(filename, "r")

					# Loop over each line in the file.
					for line in f.readlines():
		
						# Strip the line to remove whitespace.
						line = line.strip()

						# Split the line.
						opcode, count, percent = line.split(" ")
						
						#count opcode usage number
						if opcode in opcodeDict:
							opcodeDict[opcode] += 1
						else:
							opcodeDict[opcode]  = 1		
							
						#count opcode count number
						if opcode in opcodeCountDict :
							countSum = int(opcodeCountDict[opcode])+int(count)
							opcodeCountDict[opcode] 	= countSum
							
						else:
							opcodeCountDict[opcode]  	= count	
							
						#count opcode percent number
						if opcode in opcodePercentDict:
							percentSum = float(opcodePercentDict[opcode])+float(percent)
							opcodePercentDict[opcode] = percentSum
						else:
							opcodePercentDict[opcode]  = percent
							
				except Exception as err:
					print str(err)
					
	sortedOpcodeList  			= sorted(opcodeDict.items(), key=itemgetter(1),reverse=True) 
	sortedOpcodeCountList  		= sorted(opcodeCountDict.items(), key=itemgetter(1),reverse=True) 
	sortedOpcodePercentList  	= sorted(opcodePercentDict.items(), key=itemgetter(1),reverse=True) 
	
	outfile = open(resultFileName+".commonOpcodes", 'w')
	outfile.write('\n'.join('%s %s' % x for x in sortedOpcodeList))
	
	outfile = open(resultFileName+".commonOpcodesCount", 'w')
	outfile.write('\n'.join('%s %s' % x for x in sortedOpcodeCountList))
	
	outfile = open(resultFileName+".commonOpcodesPercent", 'w')
	outfile.write('\n'.join('%s %s' % x for x in sortedOpcodePercentList))
	print sortedOpcodeList
	print sortedOpcodeCountList
	print sortedOpcodePercentList



#mergeDisassembleResult('C:\\Users\\asus\\Desktop\\all_ngvck_viruses_exe\\all_viruses_exe\\type2_3_4_5_6_9\\',"type2_3_4_5_6_9")

# Finding opcodes usage count and percent within all virus and malware ##########################################################
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\all_ngvck_viruses_exe\\all_viruses_exe\\',"bening_all_opcodes")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\win7_8_mixBeningFiles\\',"bening_all_opcodes")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\test\\',"test")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\MetamorfikBackup\\all_ngvck_viruses_exe\\all_viruses_exe\\',"virus")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\win7_8_mixBeningFiles\\',"bening_all_opcodes")
##################################################################################################################################
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\win7_8_mixBeningFiles\\',"win7_8_mixBeningFiles")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\pureWin7_8_mixBeningFiles\\',"pureWin7_8_mixBeningFiles")
findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\pureWin7BeningFiles\\',"pureWin7BeningFiles")
#findCommonUsedOpcodes('C:\\Users\\asus\\Desktop\\pureWin8BeningFiles\\',"pureWin8BeningFiles")


